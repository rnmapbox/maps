require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

$RNMapboxMapsImpl = 'mapbox' # mapbox-gl, maplibre

if ENV['CI_MAP_IMPL']
  fail "Invalid CI_MAP_IMPL value" unless ["maplibre", "mapbox-gl", "mapbox"].include?(ENV['CI_MAP_IMPL'])

  $RNMapboxMapsImpl = ENV['CI_MAP_IMPL']
end

if $RNMapboxMapsImpl == 'mapbox'
  platform :ios, '13.0'
else
  platform :ios, '12.4'
end

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

production = ENV["PRODUCTION"] == "1"

if $RNMapboxMapsImpl == 'maplibre'
  $RNMapboxMapsSwiftPackageManager = {
    url: "https://github.com/maplibre/maplibre-gl-native-distribution",
    requirement: {
      kind: "upToNextMajorVersion",
      minimumVersion: "5.12.1"
    },
    product_name: "Mapbox"
  }
end

# We ignore warning except for RNMapboxMaps
INHIBIT_WARNING_BY_DEFAULT = true

if INHIBIT_WARNING_BY_DEFAULT
  ORIG_POD = method(:pod)

  # Override pods so we default to disabling all warnings
  def pod(name, *requirements)
    options = requirements.last
    if options.is_a?(Hash)
      options[:inhibit_warnings] = true unless options.has_key?(:inhibit_warnings)
    else
      requirements.push({inhibit_warnings: true})
    end
    ORIG_POD[name, *requirements]
  end
end

target 'RNMapboxGLExample' do
  pod 'rnmapbox-maps', :path => '../../', :inhibit_warnings => false

  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pre_install do |installer|
    $RNMapboxMaps.pre_install(installer)
  end

  def disable_optimizations_in_release(installer)
    installer.pods_project.build_configurations.each do |config|
      if config.name.include?("Release")
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'singlefile'
      end
    end
  end

  if !ENV['CI']
    post_install do |installer|
      # See https://github.com/rnmapbox/maps/pull/2878
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings["ONLY_ACTIVE_ARCH"] = "NO"
        end
      end
      react_native_post_install(
        installer,
        # Set `mac_catalyst_enabled` to `true` in order to apply patches
        # necessary for Mac Catalyst builds
        :mac_catalyst_enabled => false
      )
      __apply_Xcode_12_5_M1_post_install_workaround(installer)  
      $RNMapboxMaps.post_install(installer)
    end
  else
    # CI configuration
    post_install do |installer|
      react_native_post_install(
        installer,
        # Set `mac_catalyst_enabled` to `true` in order to apply patches
        # necessary for Mac Catalyst builds
        :mac_catalyst_enabled => false
      )
      disable_optimizations_in_release(installer)
      $RNMapboxMaps.post_install(installer)
    end
  end
end
