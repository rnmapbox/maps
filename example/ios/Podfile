require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

if ENV["V10"] == "true"
  $RNMBGL_USE_V10 = true
  useMapLibre = false
end

if ENV["MAPLIBRE"] == "true"
  useMapLibre = true
  $RNMBGL_USE_V10 = false
end

if $RNMBGL_USE_V10
  platform :ios, '13.0'
else
  platform :ios, '11.0'
end

if useMapLibre
  $RNMBGL_Use_SPM = {
    url: "https://github.com/maplibre/maplibre-gl-native-distribution",
    requirement: {
      kind: "upToNextMajorVersion",
      minimumVersion: "5.11.0"
    },
    product_name: "Mapbox"
  }
  $RNMGL_USE_MAPLIBRE = true
end

# We ingore warning except for RNMBGL
INHIBIT_WARNING_BY_DEFAULT = true

if INHIBIT_WARNING_BY_DEFAULT
  ORIG_POD = method(:pod)

  # Override pods so we default to disabling all warnings
  def pod(name, *requirements)
    options = requirements.last
    if options.is_a?(Hash)
      options[:inhibit_warnings] = true unless options.has_key?(:inhibit_warnings)
    else
      requirements.push({inhibit_warnings: true})
    end
    ORIG_POD[name, *requirements]
  end
end

target 'RNMapboxGLExample' do
  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  # default version
  pod 'react-native-mapbox-gl', :path => '../../', :inhibit_warnings => false

  use_native_modules!

  pre_install do |installer|
    $RNMBGL.pre_install(installer)
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  if !ENV['CI']
    # local configuration
    use_flipper!()
    post_install do |installer|
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings["ONLY_ACTIVE_ARCH"] = "NO"
        end
      end
      react_native_post_install(installer)
      __apply_Xcode_12_5_M1_post_install_workaround(installer) if defined?(__apply_Xcode_12_5_M1_post_install_workaround)
      $RNMBGL.post_install(installer)
    end
  else
    # CI configuration
    post_install do |installer|
      react_native_post_install(installer)
      __apply_Xcode_12_5_M1_post_install_workaround(installer) if defined?(__apply_Xcode_12_5_M1_post_install_workaround)
      $RNMBGL.post_install(installer)
    end
  end
end
