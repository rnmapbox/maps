<%
  const component = locals.component;
-%>
<%_ if (docosaurus) { _%>
---
custom_edit_url: https://github.com/rnmapbox/maps/blob/main/<%- component.relPath %>
---
<%_ } _%>
<!-- This file was autogenerated from <%- component.fileNameWithExt %> do not modify -->

<%_ if (component.mbx) { _%>
  Mapbox spec: [<%- component.mbx.name %>](https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#<%- component.mbx.name %>)
<%_ } _%>
  

```tsx
import { <%- component.name %> } from '@rnmapbox/maps';

<%- component.name %>

```
<%- component.description.replace('<', '&lt;') %>

<%_ if (component.props && component.props.length) { _%>
## props

<%_ if (true) { _%>
  <% for (let prop of component.props) { %>
### <%- prop.name %>

<%- propType(prop) %>
<%_ if (prop.required) { _%>
_required_
<%_ } _%>
<%- propDescription(prop) %>

<%_ if (prop.default && (prop.default != 'none')) { _%>
  _defaults to:_ `<%- prop.default %>`
<%_ } _%>
<%- examplePropLinks(prop, component) -%>

  <% } %>
<% } else { %>
<table>
<tr>
<th>Prop</th>
<th>Type</th>
<th>Default</th>
<th>Required</th>
<th>Description</th>
</tr>
<%- propTableRows(component) %>
</table>
<% } %>


<% } %>

<%_ if (component.methods && component.methods.length) { _%>
## methods
<%_ for (let method of component.methods) { _%>
### <%- getMarkdownMethodSignature(method) %>

<%- replaceNewLine(method.description) %>

#### arguments
| Name | Type | Required | Description  |
| ---- | :--: | :------: | :----------: |
<%- methodMarkdownTableRow(method) %>

<%- getMarkdownMethodExamples(method) %>
<%- exampleMethodLinks(method, component) -%>
<%_ } _%>
<%_ } _%>

<%_ if (component.styles && component.styles.length) { _%>
## styles

<%_ for (let i = 0; i < component.styles.length; i++) { _%>
<%
const style = component.styles[i];
-%>
* <a href="#<%- style.name.toLowerCase() %>"><%- style.name %></a><br/>
<%_ } _%>

<%_ for (let style of component.styles) { _%>
___

### <%- style.name %>
Name: `<%- style.name %>`

Mapbox spec: [<%- style.mbx.name %>](https://docs.mapbox.com/style-spec/reference/layers/#<%- style.mbx.fullName %>)

#### Description
<%- style.description %>

#### Type
`<%- style.type %>`
<%_ if (exists(style.default)) { _%>
#### Default Value
`<%= getStyleDefaultValue(style) %>`
<%_ } _%>

<%_ if (style.type === 'enum') { _%>
#### Supported Values
<%_ for (var i = 0; i < style.values.length; i++) { _%>
**<%- style.values[i].value %>** - <%- style.values[i].doc %><br />
<%_ } _%>

<%_ } _%>
<%_ if (exists(style.units)) { _%>
#### Units
`<%- style.units %>`

<%_ } _%>
<%_ if (exists(style.minimum)) { _%>
#### Minimum
`<%- style.minimum %>`

<%_ } _%>

<%_ if (exists(style.maximum)) { _%>
#### Maximum
`<%- style.maximum %>`

<%_ } _%>
<%_ if (style.requires.length) { _%>
#### Requires
`<%- style.requires.join(', ') %>`

<%_ } _%>
<%_ if (style.disabledBy.length) { _%>
#### Disabled By
`<%- style.disabledBy.join(', ') %>`

<%_ } _%>
<%_ if (style.allowedFunctionTypes.length) { _%>
#### Supported Style Functions
`<%- style.allowedFunctionTypes.join(', ') %>`
<%_ } _%>
<%_ if (style.expression) { _%>
#### Expression

Parameters: `<%- (style.expression.parameters || []).join(', ') %>`
<%_ } _%>
<%_ if (style.transition) { _%>
___

### <%- style.name %>Transition
Name: `<%- style.name %>Transition`

#### Description

The transition affecting any changes to this layerâ€™s <%- style.name %> property.

#### Type

`{ duration, delay }`

#### Units
`milliseconds`

#### Default Value
`{duration: 300, delay: 0}`

<%_ } %>
<%_ } _%>
<%_ } _%>
